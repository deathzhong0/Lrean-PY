# -*- coding: utf-8 -*-

L = ['我', '时', '水']

print(L[0:2])  #L[0:3]表示，从索引0开始取，直到索引0为止，但不包括索引2,即索引0，1，正好是2个元素。
print(L[:2])
print(L[-1:-2])
print(L[-1:])  #-1为倒数最后一个
print(L[:-1])   #除去最后一个
print(L[1:])   #除去最前一个

L = list(range(100))

print(L[0:99], '\n')

print(L[:10:2])  #前10个数，每2个取一个

print((1, 2, 3, 4,5)[:3])  #tuple也是一种list，唯一区别是tuple不可变。因此，tuple也可以用切片操作，只是操作的结果仍是tuple：
print('科娃yiu商城' [:4])  #字符串'xxx'也可以看成是一种list，每个元素就是一个字符。因此，字符串也可以用切片操作，只是操作结果仍是字符串：

#***********************************************************************************************

#利用切片操作，实现一个trim()函数，去除字符串首尾的空格，注意不要调用str的strip()方法：
def trim(s):
    '''if not isinstance(s,str):       #检测是否是字符串
        raise TypeError("%s不是字符串"%(s))     #不是字符串就输出对应错误'''

    try:  #检测执行n=len(s)会不会出错
        s == s[:0]
    except BaseException:  #如果出错执行"%s不是字符串"%(s)；BaseException指所有异常的基类，不填也代表全部错误类型
        return "%s不是字符串" % (s)

    '''
    n = len(s)
    n1 = 0
    n2 = 1
    while s[n1:(n1 + 1)] == ' ':
        #n1 = n1 + 1
    while s[:-n2] == ' ':
        n = -n2
        n2 = n2 + 1
    s = s[n1:(len(s) + n)]
    '''
        
    while s[:1] ==' ':
        s = s[1:]
    while s[-1:] == ' ':
        s = s[:-1]
    return s

print('测试：',trim("    "))
# 测试:
if trim('hello  ') != 'hello':
    print('hello  ')
elif trim('  hello') != 'hello':
    print('  hello')
elif trim('  hello  ') != 'hello':
    print('测试失败!')
elif trim('  hello  world  ') != 'hello  world':
    print('测试失败!')
elif trim('') != '':
    print('测试失败!')
elif trim('    ') != '':
    print('测试失败!')
else:
    print('测试成功!')